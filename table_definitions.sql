CREATE TABLE IF NOT EXISTS User (
  user_id INT NOT NULL AUTO_INCREMENT,
  username VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(1024),
  email VARCHAR(100),
  bio TEXT,
  profile_picture_url VARCHAR(512),
  linkedin_url VARCHAR(512),
  company VARCHAR(100),
  country VARCHAR(100),
  PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS UserGroup (
  group_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  PRIMARY KEY (group_id)
);

CREATE TABLE IF NOT EXISTS GroupMember (
  group_id INT NOT NULL,
  user_id INT NOT NULL,
  timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (group_id) REFERENCES UserGroup(group_id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES User(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY (group_id, user_id)
);

CREATE TABLE IF NOT EXISTS Model (
  model_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  public BOOLEAN DEFAULT 1,
  weights VARCHAR(255),
  user_id INT,
  group_id INT,
  learning_rate FLOAT NOT NULL,
  optimizer VARCHAR(255) NOT NULL,
  layers JSON NOT NULL,
  likes INT DEFAULT 0,
  PRIMARY KEY (model_id),
  FOREIGN KEY (user_id) REFERENCES User(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (group_id) REFERENCES UserGroup(group_id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Messages (
  message_id INT NOT NULL AUTO_INCREMENT,
  text TEXT NOT NULL,
  timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  user_id INT NOT NULL,
  group_id INT NOT NULL,
  FOREIGN KEY (user_id) REFERENCES User(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (group_id) REFERENCES UserGroup(group_id) ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY (message_id)
);

CREATE TABLE IF NOT EXISTS Model_Likes (
  user_id INT NOT NULL,
  model_id INT NOT NULL,
  FOREIGN KEY (user_id) REFERENCES User(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (model_id) REFERENCES Model(model_id) ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY (user_id, model_id)
);


CREATE TABLE IF NOT EXISTS Comment (
  comment_id INT NOT NULL AUTO_INCREMENT,
  text TEXT NOT NULL,
  user_id INT NOT NULL,
  model_id INT NOT NULL,
  timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES User(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (model_id) REFERENCES Model(model_id) ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY (comment_id)
);

CREATE TABLE IF NOT EXISTS Comment_Likes (
  user_id INT NOT NULL,
  comment_id INT NOT NULL,
  FOREIGN KEY (user_id) REFERENCES User(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (comment_id) REFERENCES Comment(comment_id) ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY (user_id, comment_id)
);